{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #!/bin/bash\
\
# internsct1 command version\
VERSION="v0.1.0"\
\
# Function to display the manual page\
display_manual() \{\
    echo "internsct1(1)                  User Commands                  internsct1(1)"\
    echo ""\
    echo "NAME"\
    echo "       internsct1 - Custom Linux command for operations"\
    echo ""\
    echo "SYNOPSIS"\
    echo "       internsct1 [OPTIONS] COMMAND [ARGS]..."\
    echo ""\
    echo "DESCRIPTION"\
    echo "       Custom Linux command for various operations. Supports CPU and memory information, user management, and file details."\
    echo ""\
    echo "OPTIONS"\
    echo "	 --manual 	       Shows internsct1 manual."\
    echo "       --help                Display help for intersct1."\
    echo "       --version             Display the version information."\
    echo ""\
    echo "COMMANDS"\
    echo "       cpu getinfo           Get CPU information."\
    echo "       memory getinfo        Get memory information."\
    echo "       user create <username> Create a new user."\
    echo "       user list             List all regular users on the server."\
    echo "       user list --sudo-only List all users with sudo permissions."\
    echo "       file getinfo <file>   Get information about a file."\
    echo "                             Options:"\
    echo "                               --size, -s          Print file size."\
    echo "                               --permissions, -p   Print file permissions."\
    echo "                               --owner, -o         Print file owner."\
    echo "                               --last-modified, -m Print last modified time of the file."\
    echo ""\
    echo "EXAMPLES"\
    echo "       internsct1 cpu getinfo"\
    echo "       internsct1 memory getinfo"\
    echo "       internsct1 user create Nikhil_Singh\'94\
    echo "       internsct1 user list"\
    echo "       internsct1 user list --sudo-only"\
    echo "       internsct1 file getinfo hello.txt"\
    echo "       internsct1 file getinfo --size hello.txt"\
    echo "       internsct1 file getinfo --permissions hello.txt"\
    echo "       internsct1 file getinfo --owner hello.txt"\
    echo "       internsct1 file getinfo --last-modified hello.txt"\
    echo ""\
    echo "       lscpu(1), free(1)"\
\}\
\
# Function to display version information\
display_version() \{\
    echo "internsct1 $VERSION"\
\}\
\
# Display manual if manual  option is provided\
if [ "$1" == "--manual" ]; then\
    display_manual\
    exit 0\
fi\
\
# Display help if --help option is provided\
if [ "$1" == "--help" ]; then\
    display_manual\
    exit 0\
fi\
\
# Display version if --version option is provided\
if [ "$1" == "--version" ]; then\
    display_version\
    exit 0\
fi\
\
# Example: CPU Information\
if [ "$1" == "cpu" ] && [ "$2" == "getinfo" ]; then\
    lscpu\
    exit 0\
fi\
\
# Example: Memory Information\
if [ "$1" == "memory" ] && [ "$2" == "getinfo" ]; then\
    free\
    exit 0\
fi\
\
# Example: User Creation\
if [ "$1" == "user" ] && [ "$2" == "create" ]; then\
    if [ -n "$3" ]; then\
        useradd -m "$3"\
        echo "User $3 created successfully."\
        exit 0\
    else\
        echo "Error: Username not provided."\
        exit 1\
    fi\
fi\
\
# Example: User List\
if [ "$1" == "user" ] && [ "$2" == "list" ]; then\
    cut -d: -f1 /etc/passwd\
    exit 0\
fi\
\
# Example: User List with sudo-only\
if [ "$1" == "user" ] && [ "$2" == "list" ] && [ "$3" == "--sudo-only" ]; then\
    grep -Po '^sudo.+:\\K.*$' /etc/group | tr ',' '\\n'\
    exit 0\
fi\
\
# Example: File Information\
if [ "$1" == "file" ] && [ "$2" == "getinfo" ]; then\
    if [ -n "$3" ]; then\
        file="$3"\
        echo "File: $file"\
        stat --printf="Access: %A\\nSize(B): %s\\nOwner: %U\\nModify: %y\\n" "$file"\
        exit 0\
    else\
        echo "Error: File not provided."\
        exit 1\
    fi\
fi\
exit 0}